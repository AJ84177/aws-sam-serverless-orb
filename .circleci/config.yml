version: 2.1
# yaml anchor filters
integration-dev_filters: &integration-dev_filters
  branches:
    ignore: /.*/
  tags:
    only: /integration-.*/

integration-master_filters: &integration-master_filters
  branches:
    ignore: /.*/
  tags:
    only: /master-.*/
prod-deploy_requires: &prod-deploy_requires
  [
    test_local_invoke-master,
    test_build-dev
  ]
# add your orb below, to be used in integration tests (note: a @dev:alpha
# release must exist; you'll need to publish manually at least once)
# you can use scripts/publish-alpha.sh to publish a @dev:alpha release
orbs:
  aws-serverless: circleci/aws-serverless@dev:alpha
  orb-tools: circleci/orb-tools@8.27.3

jobs:
  test_local_invoke:
    executor: aws-serverless/default
    steps:
      - checkout
      - aws-serverless/install
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && sudo tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: SAM local start-api
          background: true
          command: |
            sam local start-api -t "./sample_test/sam-app/template.yaml" --debug
      - run:
          name: Wait for db
          command: dockerize -wait http://127.0.0.1:3000 -timeout 1m
      - run: curl http://127.0.0.1:3000/hello
  test_build:
    executor: aws-serverless/default
    steps:
      - checkout
      - aws-serverless/build:
          s3-bucket: "orb-testing"
          template: "./sample_test/sam-app/template.yaml"
          debug: true
      - aws-serverless/deploy:
          template: "./sample_test/sam-app/template.yaml"
          stack-name: "serverless-dev-env"
          debug: true


workflows:
  # this `lint-pack_validate_publish-dev` workflow will run on any commit
  lint-pack_validate_publish-dev:
    jobs:
      # lint your destructured orb YAML files
      - orb-tools/lint

      # pack your orb YAML files to a single orb.yml
      # validate the orb.yml file to ensure it is well-formed
      - orb-tools/pack:
          requires:
            - orb-tools/lint

      # release dev version of orb, for testing & possible publishing
      # requires a CircleCI API token to be stored as CIRCLE_TOKEN (default)
      # https://circleci.com/docs/2.0/managing-api-tokens
      # store CIRCLE_TOKEN as a project env var or Contexts resource
      # if using Contexts, add your context below
      - orb-tools/publish-dev:
          orb-name: circleci/aws-serverless
          requires:
            - orb-tools/pack

      # trigger an integration workflow to test the dev version of your orb
      # an SSH key must be stored in your orb's repository and in CircleCI
      # (add the public key as a read/write key on GitHub; add the private
      # key in CircleCI via SSH Permissions, with github.com as Hostname)
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-dev
          ssh-fingerprints: 12:0a:59:7e:51:fd:ed:24:8b:98:d3:f1:f4:b5:21:a4
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              ignore: master

      # by default, the 1st job (above) will trigger only integration tests;
      # the 2nd job (below) may also publish a production orb version
      - orb-tools/trigger-integration-workflow:
          name: trigger-integration-master
          cleanup-tags: true
          ssh-fingerprints: 12:0a:59:7e:51:fd:ed:24:8b:98:d3:f1:f4:b5:21:a4
          tag: master
          requires:
            - orb-tools/publish-dev
          filters:
            branches:
              only: master

  # this `integration-tests_prod-release` workflow will ignore commits
  # it is only triggered by git tags, which are created in the job above
  integration-tests_prod-release:
    jobs:
      - test_build:
          name: test_build-dev
          filters: *integration-dev_filters
          context: orb-publishing
      - test_build:
          name: test_build-master
          filters: *integration-master_filters
          context: orb-publishing
      - test_local_invoke:
          name: test_local_invoke-dev
          filters: *integration-dev_filters
          context: orb-publishing
      - test_local_invoke:
          name: test_local_invoke-master
          filters: *integration-master_filters
          context: orb-publishing
      # patch, minor, or major publishing
      - orb-tools/dev-promote-prod:
          name: dev-promote-patch
          orb-name: circleci/orb-tools
          ssh-fingerprints: 12:0a:59:7e:51:fd:ed:24:8b:98:d3:f1:f4:b5:21:a4
          cleanup-tags: true
          requires:
            - test_build-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-patch.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-minor
          release: minor
          orb-name: circleci/orb-tools
          ssh-fingerprints: 12:0a:59:7e:51:fd:ed:24:8b:98:d3:f1:f4:b5:21:a4
          cleanup-tags: true
          requires:
            - test_build-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-minor.*/

      - orb-tools/dev-promote-prod:
          name: dev-promote-major
          release: major
          orb-name: circleci/orb-tools
          ssh-fingerprints: 12:0a:59:7e:51:fd:ed:24:8b:98:d3:f1:f4:b5:21:a4
          cleanup-tags: true
          requires:
            - test_build-master
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /master-major.*/
